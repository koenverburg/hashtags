import { action } from 'mobx'
import { {{ properCase name }}Repository } from './{{ properCase name }}.repository'
import { {{ properCase name }}Model } from './models/{{ properCase name }}.model'
import { Statuses } from '@enums'
import { StoreHelper, NextMobx  } from '@helpers'
import { IInitialState } from '../../base/interfaces/IInitialState'

const repository = new {{ properCase name }}Repository()

export class {{ properCase name }}Store extends StoreHelper<{{ properCase name }}Model[]> {
  constructor(initialState?: IInitialState<{{ properCase name }}Model[]>) {
    super(initialState)
  }

  @action public async fetch () {
    this.status = Statuses.PENDING
    const { response, error } = await repository.list()

    if (response) this.setData(response.data)
    if (error) this.setError(error)
  }
}

export const get{{ properCase name }}Store = NextMobx.getOrCreateStore('{{ lowerCase name }}', {{ properCase name }}Store)
