import React, { Fragment, Component } from 'react'
import { observer, inject } from 'mobx-react'
import { {{ properCase name }}Store } from './{{ properCase name }}.store'
import { IBaseMobxProps } from '../../base/interfaces/IMobBaseProps'

interface I{{ properCase name }}Props extends IBaseMobxProps {
  {{ lowerCase name}}?: {{ properCase name }}Store
}

@inject('{{ lowerCase name}}')
@observer
export class {{ properCase name }} extends Component<I{{ properCase name }}Props> {
  public componentDidMount() {
    const { {{ lowerCase name }} } = this.props
    if (!{{ lowerCase name }}!.any()) {{ lowerCase name }}!.fetch()
  }

  public render() {
    const { children, {{ lowerCase name }} } = this.props
    return (
      <>
        { {{ lowerCase name }}!.IsRejected && {{ lowerCase name }}!.error ? {{ lowerCase name }}!.error.message : null}
        { {{ lowerCase name }}!.IsFulfilled && !{{ lowerCase name }}!.any() && 'No Items'}
        { {{ lowerCase name }}!.IsFulfilled && {{ lowerCase name }}!.any() &&
          {/* data is there */}
        }
      </>
    )
  }
}
